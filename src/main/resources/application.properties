# Server configuration
spring.application.name=cmt-standardcode-gateway-service
server.port=8080
server.servlet.context-path=/

# Database configuration - Standard Spring format
spring.datasource.url=jdbc:postgresql://cmt-standard-code-gateway.postgres.database.azure.com:5432/code-bridge
spring.datasource.username=cmt_user
spring.datasource.password=
spring.datasource.driver-class-name=org.postgresql.Driver

# Hikari connection pool settings
spring.datasource.hikari.connection-timeout=20000
spring.datasource.hikari.maximum-pool-size=10
spring.datasource.hikari.minimum-idle=5
spring.datasource.hikari.idle-timeout=300000
spring.datasource.hikari.max-lifetime=1200000

# JPA/Hibernate settings
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true
spring.jpa.properties.hibernate.default_schema=code-bridge

# Standardcode gateway connection details
standcode.gateway.host=${STANDARDCODE_GATEWAY_HOST}
standcode.gateway.username=${STANDARDCODE_GATEWAY_USERNAME}
standcode.gateway.password=${STANDARDCODE_GATEWAY_PASSWORD}
standcode.gateway.localDirectory=${STANDARDCODE_GATEWAY_LOCAL_DIRECTORY:${user.home}}/Downloads/STANDARDCODE_GATEWAY
standcode.gateway.max.retry=3
standcode.gateway.auto.delete.folders=${STANDARDCODE_GATEWAY_ENABLE_FOLDER_DELETION}

# Basic Auth settings
app.security.basic.username=cmtsuperuser
app.security.basic.password=

# Okta Configs
okta.config.baseurl=${OKTA_BASE_URL}
okta.config.protocol=${OKTA_PROTOCOL}
okta.config.authserverid=${OKTA_SERVER_ID}
okta.config.audience=${OKTA_AUDIENCE}

# Okta OAuth2 Configuration
spring.security.oauth2.client.provider.okta.issuer-uri=${okta.config.baseurl}/oauth2/${okta.config.authserverid}
spring.security.oauth2.client.provider.okta.authorization-uri=${okta.config.baseurl}/oauth2/${okta.config.authserverid}/v1/authorize
spring.security.oauth2.client.provider.okta.token-uri=${okta.config.baseurl}/oauth2/${okta.config.authserverid}/v1/token
spring.security.oauth2.client.provider.okta.user-info-uri=${okta.config.baseurl}/oauth2/${okta.config.authserverid}/v1/userinfo
spring.security.oauth2.client.provider.okta.jwk-set-uri=${okta.config.baseurl}/oauth2/${okta.config.authserverid}/v1/keys

# Okta OAuth2 Resource Server
spring.security.oauth2.resourceserver.jwt.issuer-uri=${okta.config.baseurl}/oauth2/${okta.config.authserverid}
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=${okta.config.baseurl}/oauth2/${okta.config.authserverid}/v1/keys

# Okta Client Registration - you need to fill in your actual client ID and secret
spring.security.oauth2.client.registration.okta.client-id=${OKTA_CLIENT_ID:<client_id>}
spring.security.oauth2.client.registration.okta.client-secret=${OKTA_CLIENT_SECRET:<client_secret>}
spring.security.oauth2.client.registration.okta.scope=openid,profile,email
spring.security.oauth2.client.registration.okta.authorization-grant-type=authorization_code
spring.security.oauth2.client.registration.okta.redirect-uri={baseUrl}/login/oauth2/code/okta

# HLI API Configuration
hli.api.url=https://usoncology.healthlanguage.com
hli.api.auth.token=
hli.api.oauth.client-id=usoncology_test_api
hli.api.oauth.client-secret=
hli.api.oauth.token-uri=https://usoncology.healthlanguage.com/oauth/tokens

# API Request Configuration
hli.api.batch-size=50
hli.api.delay-ms=500
hli.api.max-concurrent-requests=5
hli.api.retry-max-attempts=3
hli.api.retry-backoff-ms=1000

# Logging configuration
logging.level.root=INFO
logging.level.com.mckesson.cmt=DEBUG
logging.level.org.hibernate.SQL=DEBUG
logging.level.org.hibernate.type.descriptor.sql.BasicBinder=TRACE
# Add debugging for entity scanning and JPA/Hibernate initialization
logging.level.org.springframework.boot.autoconfigure.orm.jpa=DEBUG
logging.level.org.hibernate.cfg=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss} [%thread] %-5level %logger{36} - %msg%n

# Enable property debugging
logging.level.org.springframework.boot.context.config=DEBUG
logging.level.org.springframework.boot.context.properties=TRACE

# Actuator settings
management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

# Enable database initialization
spring.sql.init.mode=always
spring.sql.init.continue-on-error=true
spring.sql.init.platform=postgresql

# Jackson settings
spring.jackson.serialization.write-dates-as-timestamps=false
spring.jackson.deserialization.fail-on-unknown-properties=false

standardcodes.localDirectory=${STANDARDCODE_GATEWAY_LOCAL_DIRECTORY:${user.home}}/Mallesh/local_storage


# For application.properties
spring.servlet.multipart.max-file-size=25MB
spring.servlet.multipart.max-request-size=25MB


# Security Configuration
spring.security.filter.order=10
spring.mvc.pathmatch.matching-strategy=ANT_PATH_MATCHER

# Logging Configuration
logging.level.org.springframework.security=DEBUG




# Spring Configuration
spring.main.allow-bean-definition-overriding=true

# Error Handling
server.error.include-message=always
server.error.include-binding-errors=always
server.error.include-stacktrace=never

# Disable Swagger and SpringDoc
#springdoc.api-docs.enabled=true
#springdoc.swagger-ui.enabled=true




# Swagger Security Configuration
springdoc.swagger-ui.oauth2-redirect-url=http://localhost:8080/swagger-ui/oauth2-redirect.html
springdoc.swagger-ui.oauth.client-id=${OKTA_CLIENT_ID:}
springdoc.swagger-ui.oauth.client-secret=${OKTA_CLIENT_SECRET:}
springdoc.swagger-ui.oauth.realm=okta
springdoc.swagger-ui.oauth.app-name=cmt-standardcode-gateway
springdoc.swagger-ui.oauth.scope-separator=,
springdoc.swagger-ui.oauth.scopes=ccmt:api,openid,profile,email
springdoc.swagger-ui.oauth.use-pkce-with-authorization-code-grant=true

# Security headers and validation
springdoc.swagger-ui.csrf.enabled=true
springdoc.swagger-ui.disable-swagger-default-url=true
springdoc.swagger-ui.display-request-duration=true
springdoc.swagger-ui.operations-sorter=method
springdoc.swagger-ui.tags-sorter=alpha

# Show security requirement in UI
springdoc.show-actuator=false
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
